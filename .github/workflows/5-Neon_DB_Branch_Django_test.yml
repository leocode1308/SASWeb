name: 5-Neon_DB_Branch_Django_test

on:
  workflow_dispatch:
  push: # push github
    branch:
      -main

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DJANGO_DEBUG: 0
      #DATABASE_URL: ${{ secrets.NEON_DATABASE_URL}}
      NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
      NEON_PROJECT_ID: ${{ secrets.NEON_PROJECT_ID }}
      NEON_PROD_BRANCH: "production"
      NEON_GITHUB_BRANCH: "gh-delete"
      #DJANGO_SECRET_KEY:
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Setup Node
        uses: actions/setup-node@v4
        with: 
          node-version: "20.11"   
      - name: Install Neon CLI
        run: |
          npm install -g neonctl
      - name: Delete previous branch
        continue-on-error: true
        run: |
          neonctl branches delete "${{ env.NEON_GITHUB_BRANCH }}" --project-id "${{ env.NEON_PROJECT_ID }}"
      - name: Create new Github Actions branch
        run: |
          neonctl branches create --name "${{ env.NEON_GITHUB_BRANCH }}" --parent "${{ env.NEON_PROD_BRANCH }}" --project-id "${{ env.NEON_PROJECT_ID }}"
      - name: Database URL Env Val for  new Github Actions branch
        run: |
          MY_NEON_CONN_STRING=$(neonctl connection-string --branch "${{ env.NEON_GITHUB_BRANCH }}" --project-id "${{ env.NEON_PROJECT_ID }}")
          echo "DATABASE_URL=$MY_NEON_CONN_STRING" >> $GITHUB_ENV
      - name: Setup Django Secret Key
        run: |
          MY_GEN_KEY=$(openssl rand -base64 32)
          echo "DJANGO_SECRET_KEY=$MY_GEN_KEY" >> $GITHUB_ENV
      - name: Install Pipenv # Paso para instalar Pipenv
        run: |
          python -m pip install pipenv
      - name: Install dependencies with Pipenv
        working-directory: ./app
        run: pipenv install --dev --skip-lock
      - name: Django Migrates DB
        working-directory: ./app
        run: |
          python manage.py migrate
      - name: Django tests
        working-directory: ./app
        run: |
          pipenv run env DATABASE_URL="${{ secrets.NEON_DATABASE_URL }}" python manage.py test --noinput --keepdb
      - name: Clean Up Step
        continue-on-error: true
        run: |
          neonctl branches delete "${{ env.NEON_GITHUB_BRANCH }}" --project-id "${{ env.NEON_PROJECT_ID }}"